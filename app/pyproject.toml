# Setting: https://docs.astral.sh/ruff/settings/

[project]
# Support for Python 3.10+
requires-python = ">=3.10"

[tool.ruff]

# Excluding many frequently ignored directories
exclude = [
    # Virtual Environments
    ".direnv",
    ".pyenv",
    ".venv",
    "__pypackages__",

    # Version Control Systems
    ".bzr",
    ".git",
    ".git-rewrite",
    ".hg",
    ".svn",

    # Dependency Management
    ".eggs",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytest_cache",
    ".pytype",
    "node_modules",
    "site-packages",

    # Build and Distribution
    "_build",
    "buck-out",
    "build",
    "dist",

    # IDE and Editor Configurations
    ".ipynb_checkpoints",
    ".vscode",

    # Project-specific Cache
    ".ruff_cache",
]

line-length = 79  # Maximum line length
indent-width = 4  # Tabulation
src = ["src"]

# Rules: https://docs.astral.sh/ruff/rules/
select = [
    "F",  # Pyflakes
    "E", "W",  # pycodestyle (Error, Warning)
    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "ASYNC",  # flake8-async
    "TRIO",  # flake8-trio
    "S",  # flake8-bandit
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "DJ",  # flake8-django
    "EM",  # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",  # flake8-todos
    "FIX",  # flake8-fixme
    "ERA",  # eradicate
    "PD",  # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",  # Pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "NPY",  # NumPy-specific rules
    "AIR",  # Airflow
    "PERF",  # Perflint
    "FURB",  # refurb
    "LOG",  # flake8-logging
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"  # Use double quotes
indent-style = "space"  # Use spaces
skip-magic-trailing-comma = false  # Respect magic trailing commas
line-ending = "auto"  # Automatically detect the appropriate line ending.
